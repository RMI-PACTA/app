openapi: "3.0.0"
info:
  version: 1.0.0
  title: RMI PACTA
  description: |
    API for interacting with RMI's Paris Agreement Capital Transition Assessment (PACTA) infrastructure
  termsOfService: TODO
  contact:
    name: Silicon Ally
    email: contact@siliconally.org
    url: https://siliconally.org
  license:
    name: MIT
    url: https://mit-license.org/
servers:
  - url: TODO
definitions:
  Language:
    type: string
    enum: &LANGUAGES
      - en
      - fr
      - es
      - de
paths:
  /pacta-version/{id}:
    get:
      summary: Returns a version of the PACTA model by ID 
      operationId: findPactaVersionById
      parameters:
        - name: id
          in: path
          description: ID of pacta version to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: pacta response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PactaVersion'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Updates a PACTA version 
      description: Updates a PACTA version's settable properties 
      operationId: updatePactaVersion
      parameters:
        - name: id
          in: path
          description: ID of PACTA version to update
          required: true
          schema:
            type: string
        - name: body
          in: query
          description: PACTA Version object properties to update
          required: true
          schema:
            $ref: '#/components/schemas/PactaVersionChanges'
      responses:
        '200':
          description: pacta version updated successfully 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccess'

        '403':
          description: caller does not have access or PACTA version does not exist 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    delete:
      summary: Deletes a pacta version by ID
      description: deletes a single pacta version based on the ID supplied
      operationId: deletePactaVersion
      parameters:
        - name: id
          in: path
          description: ID of pacta version to delete
          required: true
          schema:
            type: string 
      responses:
        '200':
          description: pacta version deleted successfully 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccess'  
        '403':
          description: caller does not have access or pacta version does not exist 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'  
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /pacta-versions:
    get:
      summary: Returns all versions of the PACTA model 
      operationId: listPactaVersions
      responses:
        '200':
          description: pacta versions 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PactaVersion'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Creates a PACTA version 
      description: Creates a PACTA version
      operationId: createPactaVersion
      parameters:
        - name: body
          in: query
          description: PACTA Version object properties to update
          required: true
          schema:
            $ref: '#/components/schemas/PactaVersion'
      responses:
        '200':
          description: pacta version created successfully 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccess'
        '403':
          description: caller does not have access to create PACTA versions 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /user/{id}:
    get:
      summary: Returns a user by ID
      description: Returns a user based on a single ID
      operationId: findUserById
      parameters:
        - name: id
          in: path
          description: ID of user to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '403':
          description: caller does not have access or user does not exist 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Updates user properties
      description: Updates a user's settable properties 
      operationId: updateUser
      parameters:
        - name: id
          in: path
          description: ID of user to update
          required: true
          schema:
            type: string
        - name: body
          in: query
          description: User object properties to update
          required: true
          schema:
            $ref: '#/components/schemas/UserChanges'
      responses:
        '200':
          description: the new user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

        '403':
          description: caller does not have access or user does not exist 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    delete:
      summary: Deletes a user by ID
      description: deletes a single user based on the ID supplied
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: ID of user to delete
          required: true
          schema:
            type: string 
      responses:
        '200':
          description: user deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccess'  
        '403':
          description: caller does not have access or user does not exist 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'  
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              
components:
  schemas:
    Language:
      type: string
      enum: *LANGUAGES

    PactaVersion:
      type: object
      required:
        - id 
        - name
        - description
        - digest
        - createdAt 
        - isDefault
      properties:
        id:
          type: string
          description: Unique id of the pacta version - system assigned 
        name:
          type: string
          description: the human meaningful name of the version of the PACTA model 
        description:
          type: string
          description: Additional information about the version of the PACTA model 
        digest:
          type: string 
          description: The hash (typically SHA256) that uniquely identifies this version of the PACTA model. 
        createdAt:
          type: string 
          format: date-time
          description: The time at which this version of the PACTA model was created 
        isDefault:
          type: boolean 
          description: Whether this version of the PACTA model is the default version 

    PactaVersionChanges:
      type: object
      properties:
        name:
          type: string
          description: the human meaningful name of the version of the PACTA model 
        description:
          type: string
          description: Additional information about the version of the PACTA model 
        digest:
          type: string 
          description: The hash (typically SHA256) that uniquely identifies this version of the PACTA model. 
        isDefault:
          type: boolean 
          description: Whether this version of the PACTA model is the default version 

    User:
      type: object
      required:
        - id
        - enteredEmail
        - requiredEmail
        - admin
        - superAdmin
        - name
        - preferredLanguage
      properties:
        id:
          type: string
          description: Unique id of the user
        enteredEmail:
          type: string
          description: User's email address as entered 
        canonicalEmail:
          type: string
          description: Stanard formatting of the email address of the user
        admin:
          type: boolean 
          description: Whether the user is an administrator of the PACTA platform
        superAdmin:
          type: boolean 
          description: Whether the user is an administrator of the PACTA platform 
        name:
          type: string
          description: Name of the user 
        preferredLanguage:
          description: The user's preferred language, if present 
          type: string
          enum: *LANGUAGES

    UserChanges:
      type:  object
      properties:
        name:
          type: string
          description: The new name of the user 
        preferredLanguage:
          description: The user's new preferred language
          type: string
          enum: *LANGUAGES
        admin:
          type: boolean
          description: Whether the given user is an admin 
        superAdmin:
          type: boolean
          description: Whether the given user is a super admin

    EmptySuccess:
      type: object

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error message
