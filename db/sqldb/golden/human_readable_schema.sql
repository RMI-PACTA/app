-- Human Readable Schema

-- This schema is heavily simplified to assist human comprehension it is
-- presented out of order and should not be used for anything other than
-- reference. It is auto-generated by the testpgx package.


CREATE TYPE analysis_type AS ENUM (
    'audit',
    'report');
CREATE TYPE audit_log_action AS ENUM (
    'CREATE',
    'UPDATE',
    'DELETE',
    'ADD_TO',
    'REMOVE_FROM',
    'ENABLE_ADMIN_DEBUG',
    'DISABLE_ADMIN_DEBUG',
    'DOWNLOAD',
    'ENABLE_SHARING',
    'DISABLE_SHARING');
CREATE TYPE audit_log_actor_type AS ENUM (
    'USER',
    'ADMIN',
    'SUPER_ADMIN',
    'SYSTEM');
CREATE TYPE audit_log_target_type AS ENUM (
    'USER',
    'PORTFOLIO',
    'PORTFOLIO_GROUP',
    'INITIATIVE',
    'PACTA_VERSION',
    'ANALYSIS',
    'INCOMPLETE_UPLOAD');
CREATE TYPE authn_mechanism AS ENUM (
    'EMAIL_AND_PASS');
CREATE TYPE failure_code AS ENUM (
    'UNKNOWN');
CREATE TYPE file_type AS ENUM (
    'csv',
    'yaml',
    'zip',
    'html');
CREATE TYPE language AS ENUM (
    'en',
    'de',
    'fr',
    'es');


CREATE TABLE analysis (
	analysis_type analysis_type NOT NULL,
	completed_at timestamp with time zone,
	created_at timestamp with time zone DEFAULT now() NOT NULL,
	description text NOT NULL,
	failure_code failure_code,
	failure_message text,
	id text NOT NULL,
	name text NOT NULL,
	owner_id text NOT NULL,
	pacta_version_id text NOT NULL,
	portfolio_snapshot_id text NOT NULL,
	ran_at timestamp with time zone);
ALTER TABLE ONLY analysis ADD CONSTRAINT analysis_pkey PRIMARY KEY (id);
ALTER TABLE ONLY analysis ADD CONSTRAINT analysis_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES owner(id) ON DELETE RESTRICT;
ALTER TABLE ONLY analysis ADD CONSTRAINT analysis_pacta_version_id_fkey FOREIGN KEY (pacta_version_id) REFERENCES pacta_version(id) ON DELETE RESTRICT;
ALTER TABLE ONLY analysis ADD CONSTRAINT analysis_portfolio_snapshot_id_fkey FOREIGN KEY (portfolio_snapshot_id) REFERENCES portfolio_snapshot(id) ON DELETE RESTRICT;


CREATE TABLE analysis_artifact (
	admin_debug_enabled boolean NOT NULL,
	analysis_id text NOT NULL,
	blob_id text NOT NULL,
	id text NOT NULL,
	shared_to_public boolean NOT NULL);
ALTER TABLE ONLY analysis_artifact ADD CONSTRAINT analysis_artifact_pkey PRIMARY KEY (id);
ALTER TABLE ONLY analysis_artifact ADD CONSTRAINT analysis_artifact_analysis_id_fkey FOREIGN KEY (analysis_id) REFERENCES analysis(id) ON DELETE RESTRICT;
ALTER TABLE ONLY analysis_artifact ADD CONSTRAINT analysis_artifact_blob_id_fkey FOREIGN KEY (blob_id) REFERENCES blob(id) ON DELETE RESTRICT;


CREATE TABLE audit_log (
	action audit_log_action NOT NULL,
	actor_id text NOT NULL,
	actor_owner_id text,
	actor_type audit_log_actor_type NOT NULL,
	created_at timestamp with time zone DEFAULT now() NOT NULL,
	primary_target_id text NOT NULL,
	primary_target_owner_id text,
	primary_target_type audit_log_target_type NOT NULL,
	secondary_target_id text NOT NULL,
	secondary_target_owner_id text,
	secondary_target_type audit_log_target_type NOT NULL);
ALTER TABLE ONLY audit_log ADD CONSTRAINT audit_log_actor_owner_id_fkey FOREIGN KEY (actor_owner_id) REFERENCES owner(id) ON DELETE RESTRICT;
ALTER TABLE ONLY audit_log ADD CONSTRAINT audit_log_primary_target_owner_id_fkey FOREIGN KEY (primary_target_owner_id) REFERENCES owner(id) ON DELETE RESTRICT;
ALTER TABLE ONLY audit_log ADD CONSTRAINT audit_log_secondary_target_owner_id_fkey FOREIGN KEY (secondary_target_owner_id) REFERENCES owner(id) ON DELETE RESTRICT;


CREATE TABLE blob (
	blob_uri text NOT NULL,
	created_at timestamp with time zone DEFAULT now() NOT NULL,
	file_name text NOT NULL,
	file_type file_type NOT NULL,
	id text NOT NULL);
ALTER TABLE ONLY blob ADD CONSTRAINT blob_blob_uri_key UNIQUE (blob_uri);
ALTER TABLE ONLY blob ADD CONSTRAINT blob_pkey PRIMARY KEY (id);


CREATE TABLE incomplete_upload (
	admin_debug_enabled boolean NOT NULL,
	blob_id text,
	completed_at timestamp with time zone,
	created_at timestamp with time zone DEFAULT now() NOT NULL,
	description text NOT NULL,
	failure_code failure_code,
	failure_message text,
	holdings_date timestamp with time zone,
	id text NOT NULL,
	name text NOT NULL,
	owner_id text NOT NULL,
	ran_at timestamp with time zone);
ALTER TABLE ONLY incomplete_upload ADD CONSTRAINT incomplete_upload_pkey PRIMARY KEY (id);
ALTER TABLE ONLY incomplete_upload ADD CONSTRAINT incomplete_upload_blob_id_fkey FOREIGN KEY (blob_id) REFERENCES blob(id) ON DELETE RESTRICT;
ALTER TABLE ONLY incomplete_upload ADD CONSTRAINT incomplete_upload_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES owner(id) ON DELETE RESTRICT;


CREATE TABLE initiative (
	affiliation text NOT NULL,
	created_at timestamp with time zone DEFAULT now() NOT NULL,
	id text NOT NULL,
	internal_description text NOT NULL,
	is_accepting_new_members boolean NOT NULL,
	is_accepting_new_portfolios boolean NOT NULL,
	language language NOT NULL,
	name text NOT NULL,
	pacta_version_id text NOT NULL,
	public_description text NOT NULL,
	requires_invitation_to_join boolean NOT NULL);
ALTER TABLE ONLY initiative ADD CONSTRAINT initiative_pkey PRIMARY KEY (id);
ALTER TABLE ONLY initiative ADD CONSTRAINT initiative_pacta_version_id_fkey FOREIGN KEY (pacta_version_id) REFERENCES pacta_version(id) ON DELETE RESTRICT;


CREATE TABLE initiative_invitation (
	created_at timestamp with time zone DEFAULT now() NOT NULL,
	id text NOT NULL,
	initiative_id text NOT NULL,
	used_at timestamp with time zone,
	used_by_user_id text);
ALTER TABLE ONLY initiative_invitation ADD CONSTRAINT initiative_invitation_pkey PRIMARY KEY (id);
ALTER TABLE ONLY initiative_invitation ADD CONSTRAINT initiative_invitation_initiative_id_fkey FOREIGN KEY (initiative_id) REFERENCES initiative(id) ON DELETE RESTRICT;
ALTER TABLE ONLY initiative_invitation ADD CONSTRAINT initiative_invitation_used_by_user_id_fkey FOREIGN KEY (used_by_user_id) REFERENCES pacta_user(id) ON DELETE RESTRICT;


CREATE TABLE initiative_user_relationship (
	initiative_id text NOT NULL,
	manager boolean NOT NULL,
	member boolean NOT NULL,
	updated_at timestamp with time zone DEFAULT now() NOT NULL,
	user_id text NOT NULL);
ALTER TABLE ONLY initiative_user_relationship ADD CONSTRAINT initiative_user_relationship_pkey PRIMARY KEY (user_id, initiative_id);


CREATE TABLE owner (
	CONSTRAINT owner_is_always_well_defined CHECK ((num_nonnulls(user_id, initiative_id) = 1)),
	id text NOT NULL,
	initiative_id text,
	user_id text);
ALTER TABLE ONLY owner ADD CONSTRAINT owner_pkey PRIMARY KEY (id);
CREATE INDEX owner_by_initiative_id ON owner USING btree (initiative_id);
CREATE INDEX owner_by_user_id ON owner USING btree (user_id);
ALTER TABLE ONLY owner ADD CONSTRAINT owner_initiative_id_fkey FOREIGN KEY (initiative_id) REFERENCES initiative(id) ON DELETE RESTRICT;
ALTER TABLE ONLY owner ADD CONSTRAINT owner_user_id_fkey FOREIGN KEY (user_id) REFERENCES pacta_user(id) ON DELETE RESTRICT;


CREATE TABLE pacta_user (
	admin boolean NOT NULL,
	authn_id text NOT NULL,
	authn_mechanism authn_mechanism NOT NULL,
	canonical_email text NOT NULL,
	created_at timestamp with time zone DEFAULT now() NOT NULL,
	entered_email text NOT NULL,
	id text NOT NULL,
	name text NOT NULL,
	preferred_language language,
	super_admin boolean NOT NULL);
ALTER TABLE ONLY pacta_user ADD CONSTRAINT pacta_user_authn_mechanism_authn_id_key UNIQUE (authn_mechanism, authn_id);
ALTER TABLE ONLY pacta_user ADD CONSTRAINT pacta_user_canonical_email_key UNIQUE (canonical_email);
ALTER TABLE ONLY pacta_user ADD CONSTRAINT pacta_user_entered_email_key UNIQUE (entered_email);
ALTER TABLE ONLY pacta_user ADD CONSTRAINT pacta_user_pkey PRIMARY KEY (id);


CREATE TABLE pacta_version (
	CONSTRAINT is_default_is_true_or_null CHECK (is_default),
	created_at timestamp with time zone DEFAULT now() NOT NULL,
	description text NOT NULL,
	digest text NOT NULL,
	id text NOT NULL,
	is_default boolean,
	name text NOT NULL);
ALTER TABLE ONLY pacta_version ADD CONSTRAINT is_default_only_1_true UNIQUE (is_default);
ALTER TABLE ONLY pacta_version ADD CONSTRAINT pacta_version_digest_key UNIQUE (digest);
ALTER TABLE ONLY pacta_version ADD CONSTRAINT pacta_version_pkey PRIMARY KEY (id);


CREATE TABLE portfolio (
	admin_debug_enabled boolean NOT NULL,
	blob_id text NOT NULL,
	created_at timestamp with time zone DEFAULT now() NOT NULL,
	description text NOT NULL,
	holdings_date timestamp with time zone,
	id text NOT NULL,
	name text NOT NULL,
	number_of_rows integer,
	owner_id text NOT NULL);
ALTER TABLE ONLY portfolio ADD CONSTRAINT portfolio_pkey PRIMARY KEY (id);
ALTER TABLE ONLY portfolio ADD CONSTRAINT portfolio_blob_id_fkey FOREIGN KEY (blob_id) REFERENCES blob(id) ON DELETE RESTRICT;
ALTER TABLE ONLY portfolio ADD CONSTRAINT portfolio_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES owner(id) ON DELETE RESTRICT;


CREATE TABLE portfolio_group (
	created_at timestamp with time zone DEFAULT now() NOT NULL,
	description text NOT NULL,
	id text NOT NULL,
	name text NOT NULL,
	owner_id text NOT NULL);
ALTER TABLE ONLY portfolio_group ADD CONSTRAINT portfolio_group_pkey PRIMARY KEY (id);
ALTER TABLE ONLY portfolio_group ADD CONSTRAINT portfolio_group_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES owner(id) ON DELETE RESTRICT;


CREATE TABLE portfolio_group_membership (
	created_at timestamp with time zone DEFAULT now() NOT NULL,
	portfolio_group_id text NOT NULL,
	portfolio_id text NOT NULL);
ALTER TABLE ONLY portfolio_group_membership ADD CONSTRAINT portfolio_group_membership_pkey PRIMARY KEY (portfolio_id, portfolio_group_id);
ALTER TABLE ONLY portfolio_group_membership ADD CONSTRAINT portfolio_group_membership_portfolio_group_id_fkey FOREIGN KEY (portfolio_group_id) REFERENCES portfolio_group(id) ON DELETE RESTRICT;
ALTER TABLE ONLY portfolio_group_membership ADD CONSTRAINT portfolio_group_membership_portfolio_id_fkey FOREIGN KEY (portfolio_id) REFERENCES portfolio(id) ON DELETE RESTRICT;


CREATE TABLE portfolio_initiative_membership (
	added_by_user_id text,
	created_at timestamp with time zone DEFAULT now() NOT NULL,
	initiative_id text NOT NULL,
	portfolio_id text NOT NULL);
ALTER TABLE ONLY portfolio_initiative_membership ADD CONSTRAINT portfolio_initiative_membership_added_by_user_id_fkey FOREIGN KEY (added_by_user_id) REFERENCES pacta_user(id) ON DELETE RESTRICT;
ALTER TABLE ONLY portfolio_initiative_membership ADD CONSTRAINT portfolio_initiative_membership_initiative_id_fkey FOREIGN KEY (initiative_id) REFERENCES initiative(id) ON DELETE RESTRICT;
ALTER TABLE ONLY portfolio_initiative_membership ADD CONSTRAINT portfolio_initiative_membership_portfolio_id_fkey FOREIGN KEY (portfolio_id) REFERENCES portfolio(id) ON DELETE RESTRICT;


CREATE TABLE portfolio_snapshot (
	CONSTRAINT snapshot_is_well_formed CHECK ((num_nonnulls(portfolio_id, portfolio_group_id, initiative_id) = 1)),
	id text NOT NULL,
	initiative_id text,
	portfolio_group_id text,
	portfolio_id text,
	portfolio_ids text[]);
ALTER TABLE ONLY portfolio_snapshot ADD CONSTRAINT portfolio_snapshot_pkey PRIMARY KEY (id);
ALTER TABLE ONLY portfolio_snapshot ADD CONSTRAINT portfolio_snapshot_initiative_id_fkey FOREIGN KEY (initiative_id) REFERENCES initiative(id) ON DELETE RESTRICT;
ALTER TABLE ONLY portfolio_snapshot ADD CONSTRAINT portfolio_snapshot_portfolio_group_id_fkey FOREIGN KEY (portfolio_group_id) REFERENCES portfolio_group(id) ON DELETE RESTRICT;
ALTER TABLE ONLY portfolio_snapshot ADD CONSTRAINT portfolio_snapshot_portfolio_id_fkey FOREIGN KEY (portfolio_id) REFERENCES portfolio(id) ON DELETE RESTRICT;


CREATE TABLE schema_migrations_history (
	applied_at timestamp with time zone DEFAULT now() NOT NULL,
	id integer NOT NULL,
	version bigint NOT NULL);
ALTER SEQUENCE schema_migrations_history_id_seq OWNED BY schema_migrations_history.id;
ALTER TABLE ONLY schema_migrations ADD CONSTRAINT schema_migrations_pkey PRIMARY KEY (version);