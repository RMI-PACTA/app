load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@rules_pkg//:pkg.bzl", "pkg_tar")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_push", "oci_tarball")

go_library(
    name = "server_lib",
    srcs = ["main.go"],
    importpath = "github.com/RMI/pacta/cmd/server",
    visibility = ["//visibility:private"],
    deps = [
        "//azure/azblob",
        "//azure/azcreds",
        "//azure/azevents",
        "//azure/aztask",
        "//cmd/server/pactasrv",
        "//db/sqldb",
        "//dockertask",
        "//oapierr",
        "//openapi:pacta_generated",
        "//reportsrv",
        "//secrets",
        "//session",
        "//task",
        "//taskrunner",
        "@com_github_deepmap_oapi_codegen//pkg/chi-middleware",
        "@com_github_go_chi_chi_v5//:chi",
        "@com_github_go_chi_chi_v5//middleware",
        "@com_github_go_chi_httprate//:httprate",
        "@com_github_go_chi_jwtauth_v5//:jwtauth",
        "@com_github_jackc_pgx_v5//pgxpool",
        "@com_github_lestrrat_go_jwx_v2//jwk",
        "@com_github_namsral_flag//:flag",
        "@com_github_rmi_credential_service//allowlist",
        "@com_github_rmi_credential_service//siteverify",
        "@com_github_rs_cors//:cors",
        "@org_uber_go_zap//:zap",
        "@org_uber_go_zap_exp//zapfield",
    ],
)

go_binary(
    name = "server",
    embed = [":server_lib"],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "configs",
    srcs = glob(["configs/**"]),
    visibility = ["//visibility:public"],
)

pkg_tar(
    name = "configs_tar",
    srcs = [":configs"],
    package_dir = "/configs",
    strip_prefix = "/cmd/server/configs",
)

pkg_tar(
    name = "server_tar",
    srcs = [":server"],
)

oci_image(
    name = "image",
    base = "@distroless_base",
    entrypoint = ["/server"],
    tars = [
        ":server_tar",
        ":configs_tar",
    ],
)

oci_push(
    name = "push_image",
    image = ":image",
    remote_tags = ["latest"],
    repository = "rmisa.azurecr.io/pacta",
)

# Note: This tarball is provided for local testing of the Docker image, see the README.md for details on usage.
oci_tarball(
    name = "image_tarball",
    image = ":image",
    repo_tags = [],
)
